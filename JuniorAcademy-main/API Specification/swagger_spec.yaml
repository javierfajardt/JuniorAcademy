swagger: "2.0"
info:
  version: "1.0.0"
  title: "TO-DO List App"
schemes:
  - http
host: "localhost:8080"
paths:
  /tasks:
    get:
      tags:
      - "Tasks"
      summary: "List of the current tasks."
      operationId: "listTasks"
      produces:
      - "application/json"
      responses:
        "405":
          description: "Invalid input"
    post:
      tags:
      - "Tasks"
      summary: "Add a new task to the list"
      operationId: "addTask"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Task object that needs to be added to the list"
        required: true
        schema:
          $ref: "#/definitions/Task"
      responses:
        "405":
          description: "Invalid input"
    put:
      tags:
      - "Tasks"
      summary: "Update an existing task"
      description: ""
      operationId: "updateTask"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Task object that needs to be updated"
        required: true
        schema:
          $ref: "#/definitions/Task"
      responses:
        "400":
          description: "Invalid ID supplied"
        "404":
          description: "Task not found"
        "405":
          description: "Validation exception"
    delete:
      tags:
      - "Tasks"
      summary: "Delete an existing task"
      description: ""
      operationId: "deleteTask"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Task object that needs to be updated"
        required: true
        schema:
          $ref: "#/definitions/Task"
      responses:
        "400":
          description: "Invalid ID supplied"
        "404":
          description: "Task not found"
        "405":
          description: "Validation exception"
  /taskById:
    get:
      tags:
      - "TaskById"
      summary: "Finds a task by its id"
      operationId: "findTaskById"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "query"
        description: "Id of the task"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "200":
          description: "successful operation"
          schema:
              $ref: "#/definitions/Task"
        "400":
          description: "Invalid id supplied"
    delete:
      tags:
      - "TaskById"
      summary: "Deletes a task by its id"
      operationId: "delTaskById"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "query"
        description: "Id of the task"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "200":
          description: "successful operation"
          schema:
              $ref: "#/definitions/Task"
        "400":
          description: "Invalid id supplied"
  /allTasks:
    delete:
      tags:
      - "AllTasks"
      summary: "Deletes every task of the list."
      operationId: "deleteTasks"
      responses:
        "405":
          description: "Invalid input"
definitions:
  Task:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      description:
        type: "string"
      status:
        type: "string"
